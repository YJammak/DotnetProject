<hc:GlowWindow
    x:Class="WpfProject.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rxui="http://reactiveui.net"
    Title="WpfProject"
    Width="850"
    Height="600"
    ActiveGlowColor="{DynamicResource PrimaryColor}"
    BorderThickness="0"
    ShowNonClientArea="False"
    ShowTitle="False"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border
            x:Name="TitleBorder"
            Grid.Row="0"
            Height="30"
            Background="{DynamicResource PrimaryBrush}"
            MouseLeftButtonDown="TitleBorder_OnMouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    Name="ButtonIcon"
                    Margin="10,0,0,0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Command="{x:Static SystemCommands.ShowSystemMenuCommand}"
                    Style="{StaticResource ButtonCustom}"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <hc:Interaction.Triggers>
                        <hc:EventTrigger EventName="MouseDoubleClick">
                            <hc:InvokeCommandAction Command="{x:Static SystemCommands.CloseWindowCommand}" />
                        </hc:EventTrigger>
                    </hc:Interaction.Triggers>
                    <Image
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        IsHitTestVisible="False"
                        Source="pack://application:,,,/PHMManufacturingTest;component/Resources/Images/logo.png" />
                </Button>
                <TextBlock
                    Grid.Column="1"
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
                <StackPanel
                    Grid.Column="2"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
                    <Button
                        Width="30"
                        Height="30"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        hc:IconElement.Geometry="{StaticResource WindowMinGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Command="SystemCommands.MinimizeWindowCommand"
                        Foreground="#DDDDDD"
                        IsTabStop="False"
                        Style="{DynamicResource IconButton}"
                        ToolTip="最小化" />
                    <Button
                        Width="30"
                        Height="30"
                        Padding="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        hc:IconElement.Geometry="{StaticResource WindowMaxGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Command="SystemCommands.MaximizeWindowCommand"
                        Foreground="#DDDDDD"
                        IsTabStop="False"
                        ToolTip="最大化">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonIcon}" TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource DarkMaskBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button
                        Width="30"
                        Height="30"
                        Padding="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        hc:IconElement.Geometry="{StaticResource WindowRestoreGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Command="SystemCommands.RestoreWindowCommand"
                        Foreground="#DDDDDD"
                        IsTabStop="False"
                        ToolTip="向下还原">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonIcon}" TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource DarkMaskBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="Normal">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button
                        Width="30"
                        Height="30"
                        Padding="0"
                        hc:IconElement.Geometry="{StaticResource CloseGeometry}"
                        hc:IconElement.Height="10"
                        hc:IconElement.Width="10"
                        Command="SystemCommands.CloseWindowCommand"
                        Foreground="#DDDDDD"
                        IsTabStop="False"
                        ToolTip="关闭">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ButtonIcon}" TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#e81123" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Grid.Row="1">
            <rxui:ViewModelViewHost
                x:Name="ViewModelViewHost"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch" />
            <StackPanel
                Margin="0,10,10,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                hc:Growl.GrowlParent="True" />
        </Grid>
    </Grid>
</hc:GlowWindow>